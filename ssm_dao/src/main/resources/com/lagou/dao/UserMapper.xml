<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.UserMapper">

    <!-- 用户分页&多条件查询 -->
    <select id="findAllUserByPage" parameterType="userVO" resultType="user">
        select * from user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null and username != ''">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time between #{startCreateTime} and #{endCreateTime}
            </if>
        </where>
    </select>

    <!-- 修改用户状态 -->
    <update id="updateUserStatus" parameterType="user">
        update user set status = #{status},update_time = #{updateTime} where id = #{id}
    </update>

    <!-- 根据手机号查询用户信息 -->
    <select id="login" parameterType="user" resultType="user">
        select * from user where phone = #{phone}
    </select>

    <!-- 用户注册 -->
    <insert id="register" parameterType="user">
        insert into user(name,phone,password,create_time,update_time) values(#{name},#{phone},#{password},#{createTime},#{updateTime})
    </insert>

    <!-- 根据用户id查询该用户关联的角色信息 -->
    <select id="findUserRoleById" parameterType="int" resultType="role">
        SELECT
            *
        FROM
            roles r
            INNER JOIN user_role_relation ur
                ON r.id = ur.role_id
        WHERE ur.user_id = #{id}
    </select>

    <!-- 根据用户id清空中间表用户与角色的关联信息 -->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from user_role_relation where user_id = #{userId}
    </delete>

    <!-- 为用户分配角色 -->
    <insert id="userContextRole" parameterType="com.lagou.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},
        #{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!-- 根据角色id查询用户关联的父级菜单信息 -->
    <select id="findParentMenuByRoleId" parameterType="list" resultType="menu">
        SELECT DISTINCT
            m.*
        FROM
            menu m
            INNER JOIN role_menu_relation rm
                ON m.id = rm.menu_id
        WHERE m.parent_id = - 1
            AND rm.role_id IN
        <foreach collection="list" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </select>

    <!-- 根据parent_id，查询子菜单信息 -->
    <select id="findSubMenuByPid" parameterType="int" resultType="menu">
        select * from menu where parent_id = #{pid}
    </select>

    <!-- 根据角色id查询用户关联的资源信息 -->
    <select id="findResourceByRoleId" parameterType="list" resultType="resource">
        SELECT DISTINCT
            r.*
        FROM
            resource r
            INNER JOIN role_resource_relation rr
                ON r.id = rr.resource_id
        WHERE rr.role_id IN
        <foreach collection="list" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </select>

</mapper>